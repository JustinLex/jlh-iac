- name: Install dependencies
  apt:
    name:
      - nginx

      # misc stuff from nextcloud playbook repo
      - zip
      - unzip
      - bzip2
      - software-properties-common
      - facter
      - lsb-release
      - ssl-cert
      - ca-certificates
      - apt-transport-https
      - gnupg2
      - ffmpeg
      - imagemagick
      - ghostscript
      - libfile-fcntllock-perl

      # redis
      - redis-server

      # php
      - php{{ php_version }}
      - php{{ php_version }}-cli
      - php{{ php_version }}-fpm
      - php{{ php_version }}-curl
      - php{{ php_version }}-common
      - php{{ php_version }}-gd
      - php{{ php_version }}-json
      - php{{ php_version }}-mbstring
      - php{{ php_version }}-xml
      - php{{ php_version }}-intl
      - php{{ php_version }}-bcmath
      - php{{ php_version }}-gmp
      - php-apcu
      - php-redis
      - php-imagick
      - php{{ php_version }}-bz2
      - php{{ php_version }}-zip
      - php{{ php_version }}-pgsql
      - php-pear
    state: present

# Webserver config
- name: Install nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: Install PHP configuration
  copy:
    src: "php/{{ item }}"
    dest: "/etc/php/{{ php_version }}/{{ item }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - 'fpm/php.ini'
    - 'cli/php.ini'
  notify: restart php-fpm

- name: Install php-fpm.ini
  template:
    src: php-fpm.conf.j2
    dest: /etc/php/{{ php_version }}/fpm/php-fpm.conf
    owner: root
    group: root
    mode: 0644
  notify: restart php-fpm

- name: Install cli/php.ini
  template:
    src: poolwww.conf.j2
    dest: /etc/php/{{ php_version }}/fpm/pool.d/www.conf
    owner: root
    group: root
    mode: 0644
  notify: restart php-fpm

- name: configure redis
  copy:
    src: redis.conf
    dest: "/etc/redis/redis.conf"
    owner: redis
    group: redis
    mode: 0600
  notify: restart redis-server

- name: Restart services before continuing to config
  meta: flush_handlers

# apply some fixes from nextcloud playbook repo
- name: Create symbolic link to /usr/bin/gs
  file:
    src:  /usr/bin/gs
    dest: /usr/local/bin/gs
    state: link

- name: Change ImageMagick settings
  lineinfile:
    path:   /etc/ImageMagick-6/policy.xml
    line:   '  <policy domain="coder" rights="read|write" pattern="{{ item }}" />'
    regexp: '(.*)<policy domain="coder" rights="(.*)" pattern="{{ item }}" />(.*)'
    insertbefore: '</policymap>'
  loop:
    - PS
    - EPI
    - PDF
    - XPS

# Install Nextcloud
- name: Download Nextcloud archive
  get_url:
    url:  "https://download.nextcloud.com/server/releases/nextcloud-20.0.1.tar.bz2"
    dest: /nextcloud.tar.bz2
    checksum: "sha256:https://download.nextcloud.com/server/releases/nextcloud-20.0.1.tar.bz2.sha256"
  register: nextcloud_archive

- name: Install Nextcloud
  unarchive:
    src: /nextcloud.tar.bz2
    dest: /mnt/nextcloud/www
    remote_src: true
    mode:  "o-rwx"
  when: nextcloud_archive.changed

# Configure Nextcloud
- name: check if config.php exists
  stat:
    path: '/mnt/nextcloud/www/nextcloud/config/config.php'
  register: config_php

- name: first setup nextcloud
  become_user: "www-data"
  become: yes
  shell: >
    php occ  maintenance:install
    --database pgsql
    --database-host "magneton.home.jlh.name"
    --database-name nextcloud
    --database-user nextcloud
    --database-pass 22tlb3v2ucae62rohrv0uivwb6q5ku
    --admin-user justin
    --data-dir /mnt/nextcloud/data
  args:
    chdir: /mnt/nextcloud/www/nextcloud/
  when: ( not config_php.stat.exists )
  register: first_setup_nextcloud

- name: set nextcloud domain config.php values
  become_user: "www-data"
  become: yes
  shell: php occ config:system:set {{ item }}
  args:
    chdir: /mnt/nextcloud/www/nextcloud/
  loop: "{{ nextcloud_config }}"
  when: ( first_setup_nextcloud is changed ) or ( force_nextcloud_config|default(false) )

- name: backup jobs, upgrade apps and database tuning
  become_user: "www-data"
  become: yes
  shell: php occ {{ item }}
  args:
    chdir: /mnt/nextcloud/www/nextcloud/
  loop:
    - background:cron
    - upgrade
    - db:add-missing-indices
    - db:convert-filecache-bigint
    - app:update --all
  when: ( first_setup_nextcloud is changed ) or ( force_nextcloud_config|default(false) )

# Configure cron
- name: Add nextcloud cronjob
  cron:
    name: nextcloud cronjob
    minute: '*/15'
    user: "www-data"
    job: "php -f /mnt/nextcloud/www/nextcloud/cron.php > /dev/null 2>&1"
